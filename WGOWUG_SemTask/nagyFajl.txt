"Operációs Rendszerek
BSc
2017/2018 II. félidő
Memóriamenedzselés
Dr. Vincze Dávid" pdf-ből kivett részlet (1-10. oldalig):

Memória kezelés
Amit már tudunk:
- a memória címezhető rekeszekből (cellákból) áll
- az instrukciók adatrészükben hivatkozhatnak
memória címekre
- az instrukciók is memória cellákban vannak
(a PC/IP is memória címre hivatkozik)
- az instrukciók processzekhez tartoznak
Következmények:
1. Memória, mint erőforrás
2. Címkötődés probléma
A processz szemszögéből a memória egy erőforrás
amire szüksége van.
Mint erőforrás, a memória:
egy véges mennyiségű több példányos erőforrás,
ahol egy cellát (egy példányt) egyszerre egy időben
csak egy processz használhat (kivéve osztott mem.).
Akár el is vehető a processztől (hiszen lementhető
az állapota) és gond nélkül vissza is adható.
Erőforrás kezelés egy külön operációs rendszer
komponens segítségével: Memory Management (MM)
Az MM feladatai az erőforrás kezeléssel kapcsolatban:
1. Memória foglalások kezelése
a) lefoglalni (allokálni) a processz számára szükséges
memória területeket
- statikus allokálás: A processz születésekor a
kontextusa számára
- dinamikus allokálás: A processz élete során felmerült
újabb igények kielégítése
1. Memória foglalások kezelése
b) Nyilvántartani a processz számára lefoglalt
területeket, valamint a szabad területeket
c) Biztosítani lehetőséget az extrém használatra is.
Például olyan processzek is futhassanak, amelyek
több memóriát igényelnek, mint az összes fizikai
memória.
2. Memória területek védelme
Egyik processz se férhessen hozzá egy másik
processzhez rendelt memória területhez.
3. Osztott memória használat biztosítása
A processzek használhassanak igény esetén közös
memória területeket. Lehetséges legyen
kódmegosztás, adatmegosztás
Memória - Címkötödés
Címkötődés probléma
A program instrukcióiban a címek program készítés
közben keletkeznek (fordításkor vagy linkeléskor), de
a memória foglalás csak a processz létrejöttekor,
azaz a program futtatásakor történik.
Nem lehet tudni program készítés közben mely
memória területek lesznek szabadok futtatáskor!
int a;
&a → ?
Valós címzésű rendszerek
A program készítéskor meghatározott címekre van
szüksége a processznek (csak oda tud betöltődni),
amíg az nem szabad nem tud futni.
(kötődik az adott címtartományhoz)
Csak single-task környezetben célszerű, bár létezett
multi-task környezetben is.
Címkötődés probléma példa
Valós címzésű rendszerek
0: 66 b8 40 12 mov ax,0x1240
4: 66 b9 21 00 mov cx,0x21
8: 66 01 c8 add ax,cx
b: 30 c0 xor al,al
d: 66 ba f8 03 mov dx,0x3f8
00000011 <kuld>:
11: ee out dx,al
12: fe c0 inc al
14: 3c ff cmp al,0xff
16: 75 f9 jne 11 <kuld>
Relatív címzésű rendszerek
A program készítésekor relatív címek keletkeznek. A
relatív címek egy bázis címhez képesti címek. A program
betöltődésekor határozódik meg a bázis cím.
Következmény:
Minden címhivatkozás leképzésre szorul.
Ehhez hardveres támogatást a CPU MMU egysége
nyújt(hat).
(A processzek az egyik regiszterben tárolják a bázis
címet. Minden címhez az MMU hozzáadja a báziscímet.)